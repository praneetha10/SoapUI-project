package pageclasses;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.List;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.How;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class HomePage
{
	//Properties
	private RemoteWebDriver driver;
	private WebDriverWait wait;
	@FindBy(how=How.XPATH,using="//h5[text()='India 1st INNINGS ']")
	private WebElement wt;
	@FindBy(how=How.XPATH,using="(//h5[text()='India 1st INNINGS ']/following::table[@class='table batsman'])[1]")
	private WebElement at;
	
	//Constructor method
	public HomePage(RemoteWebDriver driver,WebDriverWait wait)
	{
		this.driver=driver;
		PageFactory.initElements(driver,this);
		this.wait=wait;
	}
	
	//Operational methods
	public void scrollInto()
	{
		WebElement e1=driver.findElement(By.xpath("//h5[text()='India 1st INNINGS ']"));
		driver.executeScript("arguments[0].scrollIntoView();", e1);
	}
	public int getRowCount()
	{
		int value=at.findElements(By.xpath("child::tbody/tr/td/child::a/ancestor::tr")).size();
		return(value);
	}
	public int getColumnCount(int rownum)
	{
		int value=at.findElements(By.xpath("(child::tbody/tr/td/child::a/ancestor::tr)["+rownum+"]/td")).size();
		return(value);
	}
	public String getCellValue(int rownum,int colnum)
	{
		String value=at.findElement(By.xpath("(child::tbody/tr/td/child::a/ancestor::tr)["+rownum+"]["+colnum+"]")).getText();
		return(value);
	}
	public List<WebElement>getCellChildsByTagName(int rownum,int colnum,String tagname)
	{
		List<WebElement>elses=at.findElements(By.xpath("(child::tbody/tr/td/child::a/ancestor::tr)["+rownum+"]/td["+colnum+"]/"+tagname));
		return(elses);
	}
	public void copyToExcel() throws Exception
	{
		//Copy webTable to new excel filesheet
		int rc=getRowCount();
		XSSFWorkbook wb=new XSSFWorkbook();
		Sheet sh=wb.createSheet();
		//Copy webTable header(one row with multiple column)
		Row r=sh.createRow(0);
		for(int j=1;j<=9;j++)
		{
			String x=at.findElement(By.xpath("child::thead/tr/th["+j+"]")).getText();
			r.createCell(j-1).setCellValue(x);
		}
		//Copy WebTable body(multiple row with multiple colunms)
		for(int i=1;i<=rc;i++)
		{
			Row nr=sh.createRow(i);
			int cc=getColumnCount(i);
			for(int j=1;j<=cc;j++)
			{
				String output=getCellValue(i,j);
				nr.createCell(j-1).setCellValue(output);
			}
		}
		//Auto fit all column
		for(int j=1;j<=9;j++)
		{
			sh.autoSizeColumn(j-1);
		}
		//Save in HDD
		File f=new File("target\\dummy8.xlsx");
		FileOutputStream fo=new FileOutputStream(f);
		wb.write(fo);
		wb.close();
		fo.close();
		
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}